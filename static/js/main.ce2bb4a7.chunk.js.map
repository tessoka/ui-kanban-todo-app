{"version":3,"sources":["utils/GetDashId.js","components/NewDashboard.jsx","components/AddTask.jsx","components/Task.jsx","components/TaskDetails.jsx","utils/GetTaskId.js","App.js","index.js"],"names":["dashId","GetDashId","NewDashboard","dashLimit","onCreate","console","log","disabled","className","onClick","newDash","id","dashName","tasks","AddTask","dashboard","addTask","Task","task","deleteTask","changePrio","toggleDone","selectTask","useState","showText","setShowText","status","onDoubleClick","e","taskTitle","stopPropagation","toggleDescription","taskDetails","taskPriority","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","TaskDetails","selectedTask","updTask","newTaskDetails","setNewTaskDetails","newTaskTitle","setNewTaskTitle","value","placeholder","onChange","target","type","taskId","GetTaskId","App","dataBank","setDataBank","useEffect","setDashLimit","length","tempData","push","filter","elemOfTasks","setSelectedTask","selectedTaskPrev","setSelectedTaskPrev","setShowTaskDesc","showTaskDesc","showCloseButton","setShowCloseButton","map","name","changeDashName","onFocus","onBlur","dash","deleteDash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2bb4a7.chunk.js","sourcesContent":["let dashId = 0\r\nconst GetDashId = () => {\r\n  return dashId++\r\n}\r\n\r\nexport default (GetDashId)\r\n","import React from 'react'\r\nimport GetDashId from '../utils/GetDashId.js'\r\n\r\nfunction NewDashboard({ dashLimit, onCreate }) {\r\n\r\n  console.log(\"dashLimit:\")\r\n  console.log(dashLimit)\r\n\r\n  // ADD NEW DASHBOARD\r\n  const newDash = () => {\r\n    let newDash = {id: GetDashId(), dashName: \"\", tasks: []}\r\n    onCreate(newDash)\r\n  }\r\n  // END of ADD NEW DASHBOARD\r\n\r\n  return (\r\n    <>\r\n      {\r\n        dashLimit ? \r\n        <button disabled className=\"btn-disabled\">Reached maximum</button>\r\n        :\r\n        <button className=\"btn-board-create\" onClick={newDash}>+ Create board</button>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDashboard\r\n","import React from 'react'\r\n\r\nfunction AddTask({dashboard, addTask}) {\r\n  return (\r\n    <button className=\"add-task\" onClick={() => addTask(dashboard)}>\r\n      <div className=\"add-task-sign\">+</div>\r\n      <p>Add Task</p>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\r\nimport EditLogo from '../svg/edit-d-text'\r\n\r\n\r\nfunction Task({dashboard, task, deleteTask, changePrio, toggleDone, selectTask}) {\r\n\r\n  const [ showText, setShowText ] = useState(false)\r\n\r\n  let toggleDescription = (e) => {\r\n    setShowText(!showText)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <div className={task.status === \"done\" ? 'task-done task-card' : task.status === \"progress\" ? 'task-progress task-card' : 'task-card' } key={task.id} onDoubleClick={(e) => toggleDone(e, task)}>\r\n      <div className=\"card-top\">\r\n        <div className=\"title-text\">{task.taskTitle}</div>\r\n        <div className=\"card-top-x\" onClick={(e) => {deleteTask(e, dashboard, task)}}>x</div>\r\n      </div>\r\n      <div className=\"card-mid\" onClick={(e) => toggleDescription(e)}>\r\n        { showText ? task.taskDetails : \"Click for details...\"}\r\n      </div>\r\n      <div className=\"card-bot\">\r\n        <div className={`task-prio prio-${task.taskPriority}`} onClick={(e) => changePrio(e, task)}>{task.taskPriority} priority</div>\r\n        <div className=\"task-edit\" onClick={() => selectTask(dashboard, task)}><svg className=\"edit-logo\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction TaskDetails({selectedTask, updTask, changePrio}) {\r\n\r\n  \r\n  let dashboard = \"\"\r\n  let task = \"\"\r\n  if (selectedTask !== null) {\r\n    task = selectedTask[1]\r\n  }\r\n  \r\n  const [ newTaskDetails, setNewTaskDetails ] = useState(task.taskDetails)\r\n  const [ newTaskTitle, setNewTaskTitle ] = useState(task.taskTitle)\r\n\r\n  const changeTaskDesc = (value) => {\r\n    setNewTaskDetails(value)\r\n  }\r\n\r\n  const changeTaskTitle = (value) => {\r\n    setNewTaskTitle(value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"task-details\">\r\n      <div className=\"details-header details\">\r\n        <div className=\"details-task-header\">TaskID: {task.id}</div>\r\n        <textarea className=\"details-task-title\" value={newTaskTitle === \"Undefined\" ? \"\" : newTaskTitle} placeholder={newTaskTitle === \"Undefined\" || newTaskTitle === \"\" ? \"Undefined\" : \"\"} onChange={(e) => changeTaskTitle(e.target.value)}/>\r\n      </div>\r\n\r\n      <div className=\"details-top details\">\r\n        <h3>Details</h3>\r\n        <div className=\"details-task-prio\">Priority:<p className={`task-prio prio-${task.taskPriority}`} onClick={(e) => changePrio(e, task)}>{task.taskPriority} priority</p></div>\r\n        <div className=\"details-task-desc\">Description:</div>\r\n        <textarea type=\"textarea\" value={newTaskDetails} onChange={(e) => changeTaskDesc(e.target.value)}/>\r\n      </div>\r\n\r\n      <div className=\"details-mid details\">\r\n        <h3>People</h3>\r\n        <p className=\"details-task-prio\"></p>\r\n        <p className=\"details-task-prio\"></p>\r\n      </div>\r\n      \r\n      <div className=\"details-bot details\">\r\n        <h3>Dates</h3>\r\n        <div className=\"details-task-dates\"></div>\r\n      </div>\r\n\r\n      <div className=\"details-btn-box\">\r\n        <button onClick={() => updTask(newTaskTitle, newTaskDetails)}>UPDATE</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskDetails\r\n","let taskId = 0\r\nconst GetTaskId = () => {\r\n  return taskId++\r\n}\r\n\r\nexport default (GetTaskId)\r\n","// import Dashboards from './Dashboards'\nimport { useEffect, useState } from 'react'\nimport NewDashboard from './components/NewDashboard.jsx'\nimport AddTask from './components/AddTask'\nimport Task from './components/Task'\nimport TaskDetails from './components/TaskDetails.jsx'\nimport GetTaskId from './utils/GetTaskId.js'\nimport GetDashId from './utils/GetDashId.js'\n\n\n\n\nfunction App() {\n  \n  const [ dataBank, setDataBank] = useState([])\n\n  useEffect(() => {\n    setDataBank([\n      {id: GetDashId(), dashName: \"Today\", tasks: [\n        {id: GetTaskId(), status: \"pending\", taskPriority: \"high\", taskTitle: \"Some random text\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\n        {id: GetTaskId(), status: \"progress\", taskPriority: \"low\", taskTitle: \"Do loundry\", taskDetails: \"Ever have that feeling where you're not sure if you're awake or dreaming?\"},\n        {id: GetTaskId(), status: \"pending\", taskPriority: \"med\", taskTitle: \"He who controls the Spice controls the Universe!\", taskDetails: \"Let's face it, this is not the worst thing you've caught me doing.\"},\n      ]},\n      {id: GetDashId(), dashName: \"Tomorrow\", tasks: [\n        {id: GetTaskId(), status: \"done\", taskPriority: \"low\", taskTitle: \"Long live the emperor for two rows\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\n        {id: GetTaskId(), status: \"pending\", taskPriority: \"low\", taskTitle: \"Doctor Who?\", taskDetails: \"The universe is big. It’s vast and complicated and ridiculous. And sometimes, very rarely, impossible things just happen and we call them miracles.\"},\n        {id: GetTaskId(), status: \"pending\", taskPriority: \"med\", taskTitle: \"Hello There\", taskDetails: \"May the force be with you, young padawan.\"},\n        {id: GetTaskId(), status: \"pending\", taskPriority: \"high\", taskTitle: \"Why so serious?\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\n      ]}\n    ])\n  }, [])\n\n  console.log(dataBank)\n\n\n  // CHECK # of DASHBOARDS\n    const [ dashLimit, setDashLimit ] = useState(false)\n  \n    useEffect(() => {\n      if (dataBank.length >= 5) {\n        setDashLimit(true)\n      }\n    }, [dataBank.length]);\n  // CHECK # of DASHBOARDS\n\n\n// DASH NAME CHANGE\n  const changeDashName = (dashboard, e) => {\n    dashboard.dashName = e.target.value\n    console.log(\"changeDashName function happened\")\n    setDataBank([...dataBank])\n  }\n// END of DASH NAME CHANGE\n\n\n// CREATE DASHBOARD\n  const updDashboard = (newDash) => {\n    console.log(\"updDashboard function happened\")\n    setDataBank([...dataBank, newDash])\n  }\n// END of CREATE DASHBOARD\n\n\n// MARK TASK AS DONE\n  const toggleDone = (e, task) => {\n    let tempData = [...dataBank]\n    if (task.status === \"pending\") {\n      task.status = \"progress\"\n    } else if (task.status === \"progress\") {\n      task.status = \"done\"  \n    } else {\n      task.status = \"pending\"\n    }\n    console.log(\"toogleDone function happened\")\n    setDataBank(tempData)\n    e.stopPropagation() /// NOT WORKING YET !!!!!!!!!!!!!!!\n  }\n// END of MARK TASK AS DONE\n\n\n// ADD NEW TASK\n  const addTask = (dashboard) => {\n    let tempData = dashboard.tasks\n    tempData.push({id: GetTaskId(), status: \"pending\", taskPriority: \"low\", taskTitle: \"Undefined\", taskDetails: \" \"})\n    console.log(\"addTask function happened\")\n    setDataBank([...dataBank])\n    }\n// END of ADD NEW TASK\n\n\n// CHANGE PRIO\n  const changePrio = (e, task) => {\n    if (task.taskPriority === \"low\") {\n      task.taskPriority = \"med\"\n    } else if (task.taskPriority === \"med\") {\n      task.taskPriority = \"high\"\n    } else {\n      task.taskPriority = \"low\"\n    }\n    console.log(\"changePrio function happened\")\n    setDataBank([...dataBank])\n\n    e.stopPropagation()\n  }\n// END of CHANGE PRIO\n\n\n// DELETE TASK\n  const deleteTask = (e, dashboard, task) => {\n    dashboard.tasks = dashboard.tasks.filter(elemOfTasks => elemOfTasks !== task)\n    console.log(\"deleteTask function happened\")\n    setSelectedTask(null)\n    setDataBank([...dataBank])\n    e.stopPropagation()\n  }\n// END of DELETE TASK\n\n\n// SELECT TASK \n  const [selectedTask, setSelectedTask] = useState(null)\n  const [selectedTaskPrev, setSelectedTaskPrev] = useState(null)\n\n  const selectTask = (dashboard, task) => {\n\n    if (task.id === selectedTaskPrev) {\n      setSelectedTaskPrev(null)\n      setShowTaskDesc(false)\n    } else {\n      setShowTaskDesc(true)\n    }\n    \n    setSelectedTask([dashboard, task])\n    setSelectedTaskPrev(task.id)\n  }\n\n  const [ showTaskDesc, setShowTaskDesc] = useState(false)\n  const [ showCloseButton, setShowCloseButton] = useState(true)\n\n\n// DELETED DASHBOARD\n  const deleteDash = (dashboard) => {\n    setDataBank(dataBank.filter(dash => dash !== dashboard))\n    setDashLimit(false)\n  }\n// END of DELETE DASHBOARD\n\n\n\n// UPDATE TASK\n  const updTask = (taskTitle, taskDetails) => {\n    selectedTask[1].taskTitle = taskTitle\n    selectedTask[1].taskDetails = taskDetails\n    setDataBank([...dataBank])\n  }\n// END of UPDATE TASK\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"dashboard-container\">\n        <div className=\"todo-container\">\n          <div className=\"header-box\">\n            <h1>The Kanban App</h1>\n            <NewDashboard dashLimit={dashLimit} onCreate={updDashboard} />\n          </div>\n          <div className=\"dashboard-box\">\n            {\n              dataBank.map(dashboard => { return (\n                <div className=\"board\" key={dashboard.id}>\n                  <div className=\"board-header\">\n                    <input type=\"text\" name=\"dashname\" id=\"dashname\" onChange={(e) => changeDashName(dashboard, e)} value={dashboard.dashName === \"\" ? \"\" : dashboard.dashName} placeholder={dashboard.dashName === \"\" ? \"Undefined\" : \"\"} onFocus={() => setShowCloseButton(false)} onBlur={() => setShowCloseButton(true)}/>\n                    {showCloseButton && <div className=\"board-delete\" onClick={() => deleteDash(dashboard)}>x</div>}\n                  </div>\n\n                  {dashboard.tasks.map(task => \n                    <Task key={task.id} dashboard={dashboard} task={task} deleteTask={deleteTask} changePrio={changePrio} toggleDone={toggleDone} selectTask={selectTask}/>\n                  )}\n                  <AddTask dashboard={dashboard} addTask={addTask} />\n                </div>\n              )})\n            }\n          </div>\n        </div>\n        \n        { showTaskDesc && <TaskDetails selectedTask={selectedTask} updTask={updTask} changePrio={changePrio}/>}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}