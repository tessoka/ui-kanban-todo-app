{"version":3,"sources":["components/NewDashboard.jsx","components/AddTask.jsx","components/Task.jsx","components/TaskDetails.jsx","utils/GetID.js","Databank.js","App.js","index.js"],"names":["NewDashboard","getDashId","onCreate","className","onClick","newDash","id","dashName","tasks","AddTask","dashboard","addTask","Task","task","deleteTask","changePrio","toggleDone","selectTask","useState","showText","setShowText","status","onDoubleClick","e","taskTitle","stopPropagation","toggleDescription","taskDetails","taskPriority","TaskDetails","selectedTask","updTask","newTaskDetails","setNewTaskDetails","newTaskTitle","setNewTaskTitle","value","onChange","target","type","dashId","getTaskId","dataSource","App","dataBank","setDataBank","console","log","tempData","push","i","splice","setSelectedTask","selectedTaskPrev","setSelectedTaskPrev","setShowTaskDesc","showTaskDesc","showCloseButton","setShowCloseButton","map","name","changeDashName","onFocus","onBlur","filter","dash","deleteDash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1aecdb3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction NewDashboard({getDashId, onCreate}) {\r\n\r\n// ADD NEW DASHBOARD\r\nconst newDash = () => {\r\n  let newDash = {id: getDashId, dashName: \"Undefined\", tasks: []}\r\n  onCreate(newDash)\r\n}\r\n// END of ADD NEW DASHBOARD\r\n\r\n  return (\r\n    <>\r\n      <button className=\"board-create\" onClick={newDash}>+ Create board</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDashboard\r\n","import React from 'react'\r\n\r\nfunction AddTask({dashboard, addTask}) {\r\n  return (\r\n    <button className=\"add-task\" onClick={() => addTask(dashboard)}>\r\n      <div className=\"add-task-sign\">+</div>\r\n      <p>Add Task</p>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction Task({dashboard, task, deleteTask, changePrio, toggleDone, selectTask}) {\r\n\r\n  const [ showText, setShowText ] = useState(false)\r\n\r\n  let toggleDescription = (e) => {\r\n    setShowText(!showText)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <div className={task.status === \"done\" ? 'task-done task-card' : task.status === \"progress\" ? 'task-progress task-card' : 'task-card' } key={task.id} onDoubleClick={(e) => toggleDone(e, task)} onClick={() => selectTask(dashboard, task)}>\r\n      <div className=\"card-top\">\r\n        <div className=\"title-text\">{task.taskTitle}</div>\r\n        <div className=\"card-top-x\" onClick={(e) => {deleteTask(e, dashboard, task)}}>x</div>\r\n      </div>\r\n      <div className=\"card-mid\" onClick={(e) => toggleDescription(e)}>\r\n        { showText ? task.taskDetails : \"Click for details...\"}\r\n      </div>\r\n      <div className=\"card-bot\">\r\n        <div className={`task-prio prio-${task.taskPriority}`} onClick={(e) => changePrio(e, task)}>{task.taskPriority} priority</div>\r\n        <div className=\"task-assign\">Unassigned</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction TaskDetails({selectedTask, updTask}) {\r\n\r\n  \r\n  let dashboard = \"\"\r\n  let task = \"\"\r\n  if (selectedTask !== null) {\r\n    task = selectedTask[1]\r\n  }\r\n  \r\n  const [ newTaskDetails, setNewTaskDetails ] = useState(task.taskDetails)\r\n  const [ newTaskTitle, setNewTaskTitle ] = useState(task.taskTitle)\r\n\r\n  const changeTaskDesc = (value) => {\r\n    setNewTaskDetails(value)\r\n  }\r\n\r\n  const changeTaskTitle = (value) => {\r\n    setNewTaskTitle(value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"task-details\">\r\n      <div className=\"details-header details\">\r\n        <div className=\"details-task-header\">TaskID: {task.id}</div>\r\n        <textarea className=\"details-task-title\" value={newTaskTitle} onChange={(e) => changeTaskTitle(e.target.value)}/>\r\n      </div>\r\n\r\n      <div className=\"details-top details\">\r\n        <h3>Details</h3>\r\n        <div className=\"details-task-prio\">Priority:<p>{task.taskPriority} priority</p></div>\r\n        <div className=\"details-task-desc\">Description:</div>\r\n        <textarea type=\"textarea\" value={newTaskDetails} onChange={(e) => changeTaskDesc(e.target.value)}/>\r\n      </div>\r\n\r\n      <div className=\"details-mid details\">\r\n        <h3>People</h3>\r\n        <p className=\"details-task-prio\"></p>\r\n        <p className=\"details-task-prio\"></p>\r\n      </div>\r\n      \r\n      <div className=\"details-bot details\">\r\n        <h3>Dates</h3>\r\n        <div className=\"details-task-dates\"></div>\r\n      </div>\r\n\r\n      <div className=\"details-btn-box\">\r\n        <button onClick={() => updTask(newTaskTitle, newTaskDetails)}>UPDATE</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskDetails\r\n","\r\nlet taskId = 0\r\nconst getTaskId = () => {\r\n  taskId++\r\n  // console.log(taskId)\r\n  return taskId\r\n}\r\n\r\n\r\nlet dashId = 0\r\nconst getDashId = () => {\r\n  dashId++\r\n  // console.log(\"dashID: \" + dashId)\r\n  return dashId\r\n}\r\n\r\nexport default (getTaskId, getDashId)","export const dataSource = [\r\n  {id: 1, dashName: \"Today\", tasks: [\r\n    {id: 1, taskPriority: \"high\", taskTitle: \"Some random text\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\r\n    {id: 2, taskPriority: \"low\", taskTitle: \"Do loundry\", taskDetails: \"Ever have that feeling where you're not sure if you're awake or dreaming?\"},\r\n    {id: 3, taskPriority: \"med\", taskTitle: \"He who controls the Spice controls the Universe!\", taskDetails: \"Let's face it, this is not the worst thing you've caught me doing.\"},\r\n  ]},\r\n  {id: 2, dashName: \"Tomorrow\", tasks: [\r\n    {id: 1, taskPriority: \"low\", taskTitle: \"Doctor Who?\", taskDetails: \"The universe is big. It’s vast and complicated and ridiculous. And sometimes, very rarely, impossible things just happen and we call them miracles.\"},\r\n    {id: 2, taskPriority: \"low\", taskTitle: \"Long live the emperor\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\r\n    {id: 3, taskPriority: \"med\", taskTitle: \"Hello There\", taskDetails: \"May the force be with you, young padawan.\"},\r\n    {id: 4, taskPriority: \"high\", taskTitle: \"Why so serious?\", taskDetails: \"The detailed description of the specific task max 255 chars.\"},\r\n  ]}\r\n]\r\n\r\n","// import Dashboards from './Dashboards'\nimport { useState } from 'react'\nimport NewDashboard from './components/NewDashboard.jsx'\nimport AddTask from './components/AddTask'\nimport Task from './components/Task'\nimport TaskDetails from './components/TaskDetails.jsx'\nimport getTaskId from './utils/GetID.js'\nimport getDashId from './utils/GetID.js'\n\nimport { dataSource } from \"./Databank\"\n\n\nfunction App() {\n\n  const [ dataBank, setDataBank] = useState(dataSource)\n\n  console.log(dataBank)\n\n\n// DASH NAME CHANGE\n  const changeDashName = (dashboard, e) => {\n    dashboard.dashName = e.target.value\n    console.log(\"check it happened\")\n    setDataBank([...dataBank])\n  }\n// END of DASH NAME CHANGE\n\n\n// UPDATE DASHBOARD\n  const updDashboard = (newDash) => {\n    console.log(\"check it happened new dash\")\n    setDataBank([...dataBank, newDash])\n  }\n// END of UPDATE DASHBOARD\n\n\n// MARK TASK AS DONE\n  const toggleDone = (e, task) => {\n    let tempData = [...dataBank]\n    if (task.status === \"pending\") {\n      task.status = \"progress\"\n    } else if (task.status === \"progress\") {\n      task.status = \"done\"  \n    } else {\n      task.status = \"pending\"\n    }\n    console.log(\"check it happened\")\n    setDataBank(tempData)\n    e.stopPropagation() /// NOT WORKING YET !!!!!!!!!!!!!!!\n  }\n// END of MARK TASK AS DONE\n\n\n// ADD NEW TASK\n  const addTask = (dashboard) => {\n    let tempData = dashboard.tasks\n    tempData.push({id: getTaskId(), status: \"pending\", taskPriority: \"low\", taskTitle: \"Undefinded\", taskDetails: \" \"})\n    console.log(\"check it happened\")\n    setDataBank([...dataBank])\n    }\n// END of ADD NEW TASK\n\n\n// CHANGE PRIO\n  const changePrio = (e, task) => {\n    if (task.taskPriority === \"low\") {\n      task.taskPriority = \"med\"\n    } else if (task.taskPriority === \"med\") {\n      task.taskPriority = \"high\"\n    }\n    else {\n      task.taskPriority = \"low\"\n    }\n    console.log(\"check it happened\")\n    setDataBank([...dataBank])\n\n    e.stopPropagation()\n  }\n// END of CHANGE PRIO\n\n\n// DELETE TASK\n  const deleteTask = (e, dashboard, task) => {\n    for (let i in dashboard.tasks) {\n      if (dashboard.tasks[i] === task) {\n        dataBank[dashboard.id-1].tasks.splice(i, 1)\n      }\n    }\n    console.log(\"check it happened\")\n    setSelectedTask(null)\n    setDataBank([...dataBank])\n    e.stopPropagation()\n  }\n// END of DELETE TASK\n\n\n// SELECT TASK \n  const [selectedTask, setSelectedTask] = useState(null)\n  const [selectedTaskPrev, setSelectedTaskPrev] = useState(null)\n\n  const selectTask = (dashboard, task) => {\n    \n    console.log(task.id)\n    console.log(selectedTaskPrev)\n\n    if (task.id === selectedTaskPrev) {\n      setSelectedTaskPrev(null)\n      setShowTaskDesc(false)\n    } else {\n      setShowTaskDesc(true)\n    }\n    \n    setSelectedTask([dashboard, task])\n    setSelectedTaskPrev(task.id)\n  }\n\n  const [ showTaskDesc, setShowTaskDesc] = useState(false)\n  const [ showCloseButton, setShowCloseButton] = useState(true)\n\n\n// DELETED DASHBOARD\n  const deleteDash = (dashboard) => {\n    setDataBank(dataBank.filter(dash => dash !== dashboard))\n  }\n// END of DELETE DASHBOARD\n\n\n\n// UPDATE TASK\n  const updTask = (taskTitle, taskDetails) => {\n    selectedTask[1].taskTitle = taskTitle\n    selectedTask[1].taskDetails = taskDetails\n    setDataBank([...dataBank])\n  }\n// END of UPDATE TASK\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"dashboard-container\">\n        <div className=\"todo-container\">\n          <div className=\"header-box\">\n            <h1>To Do Board</h1>\n            <NewDashboard getDashId={getDashId()} onCreate={updDashboard} />\n          </div>\n          <div className=\"dashboard-box\">\n            {\n              dataBank.map(dashboard => { return (\n                <div className=\"board\" key={dashboard.id}>\n                  <div className=\"board-header\">\n                    <input type=\"text\" name=\"dashname\" id=\"dashname\" onChange={(e) => changeDashName(dashboard, e)} value={dashboard.dashName} onFocus={() => setShowCloseButton(false)} onBlur={() => setShowCloseButton(true)}/>\n                    {showCloseButton && <div className=\"board-delete\" onClick={() => deleteDash(dashboard)}>x</div>}\n                  </div>\n\n                  {dashboard.tasks.map(task => \n                    <Task key={task.id} dashboard={dashboard} task={task} deleteTask={deleteTask} changePrio={changePrio} toggleDone={toggleDone} selectTask={selectTask}/>\n                  )}\n                  <AddTask dashboard={dashboard} addTask={addTask} />\n                </div>\n              )})\n            }\n          </div>\n        </div>\n        \n        { showTaskDesc && <TaskDetails selectedTask={selectedTask} updTask={updTask}/>}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}